#!/bin/bash

AOSP_PATH=/android/platform/aosp
SRC_PATH=packages/apps/Car/Launcher

check_env() {
	if [[ -z "$ANDROID_BUILD_TOP" ]]; then
        cd ${AOSP_PATH}
        . ${AOSP_PATH}/build/envsetup.sh
        lunch aosp_cf_x86_64_auto-userdebug
	fi

	if [[ -z "$ANDROID_BUILD_TOP" ]]; then
        echo 'cannot find ANDROID_BUILD_TOP'
        exit 1
	else
		echo "TOP: ${ANDROID_BUILD_TOP}"
	fi
}

build() {
    check_env
    #${ANDROID_BUILD_TOP}/${SRC_PATH}/tools/generate-overlayable.sh
    pushd .
    cd ${ANDROID_BUILD_TOP}/${SRC_PATH}
    mma -j
    status=$?
    popd
    if [ $status -ne 0 ]; then
        echo "fail to build"
        exit 1
    fi
}

sync() {
    check_env
    echo "wait for device"
    adb wait-for-device
    adb root
    verity_status=$(adb shell avbctl get-verity)
    if [[ $verity_status == *"enabled"* ]]; then
        adb disable-verity
        adb reboot
        adb wait-for-device
        adb root
    fi
    adb remount
    adb sync
}

kill() {
    check_env
	
    adb shell pkill -TERM -f com.android.car.carlauncher
}


all() {
    build
    sync
    kill
}


usage() {
    echo $0: all\|build\|sync\|test
}

if test $# != 1; then
    usage
else
    case "$1" in
        --help)
            usage 0
            ;;
        all|build|sync|kill)
            "$1"
            ;;
        *)
            usage
            ;;
    esac
fi

exit 0
